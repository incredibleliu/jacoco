<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>jacoco</groupId>
  <artifactId>jacoco</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  
  <parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.3.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		    <maven.compiler.source>1.8</maven.compiler.source>
   			 <maven.compiler.target>1.8</maven.compiler.target>
	</properties>
	
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-mail</artifactId>
		    <!-- <version>1.4.3.RELEASE</version> -->
		</dependency>
		
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-devtools</artifactId>
		    <!-- <version>2.0.3.RELEASE</version> -->
		</dependency>
		
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-batch</artifactId>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
		<dependency>
		    <groupId>mysql</groupId>
		    <artifactId>mysql-connector-java</artifactId>
		    <version>5.1.28</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		
			  <!-- https://mvnrepository.com/artifact/org.codehaus.sonar/sonar-maven-plugin -->
		<dependency>
		    <groupId>org.codehaus.sonar</groupId>
		    <artifactId>sonar-maven-plugin</artifactId>
		    <version>5.0</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-compiler-plugin -->
		<dependency>
		    <groupId>org.apache.maven.plugins</groupId>
		    <artifactId>maven-compiler-plugin</artifactId>
		    <version>3.7.0</version>
		</dependency>
		
	</dependencies>
  
  <build>
  <plugins>
  
  	<plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.0</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>
      
    <plugin>
    	<groupId>org.sonarsource.scanner.maven</groupId>
    	<artifactId>sonar-maven-plugin</artifactId>
    	<version>3.3.0.603</version>
    </plugin>
	  
	  <plugin>
	    <groupId>org.apache.maven.plugins</groupId>
	    <artifactId>maven-surefire-plugin</artifactId>
	    <version>2.15</version>
	    <configuration>
	        <!-- Sets the VM argument line used when unit tests are run. -->
	        <argLine>${surefireArgLine}</argLine>
	        <!-- Skips unit tests if the value of skip.unit.tests property is true -->
	        <skipTests>${skip.unit.tests}</skipTests>
	        <!-- Excludes integration tests when unit tests are run. -->
	        <excludes>
	            <exclude>**/IT*.java</exclude>
	        </excludes>
	    </configuration>
	  </plugin>
	
	<plugin>
	    <groupId>org.apache.maven.plugins</groupId>
	    <artifactId>maven-failsafe-plugin</artifactId>
	    <version>2.15</version>
	    <executions>
	        <!--
	            Ensures that both integration-test and verify goals of the Failsafe Maven
	            plugin are executed.
	        -->
	        <execution>
	            <id>integration-tests</id>
	            <goals>
	                <goal>integration-test</goal>
	                <goal>verify</goal>
	            </goals>
	            <configuration>
	                <!-- Sets the VM argument line used when integration tests are run. -->
	                <argLine>${failsafeArgLine}</argLine>
	                <!--
	                    Skips integration tests if the value of skip.integration.tests property
	                    is true
	                -->
	                <skipTests>${skip.integration.tests}</skipTests>
	            </configuration>
	        </execution>
	    </executions>
	</plugin>
	  
  
  	<plugin>
    <groupId>org.jacoco</groupId>
    <artifactId>jacoco-maven-plugin</artifactId>
    <version>0.7.5.201505241946</version>
    <configuration>
    	<excludes>
    	
    		
            <exclude>junit/MyMath*</exclude>
 			
 			<!-- 
            <exclude>com/acme/api/*Api.class</exclude>
 
            <exclude>com/acme/generated/**/*</exclude>
             -->
 
        </excludes>
    </configuration>
    
    <!--<version>0.8.1</version>-->
    <executions>
        <!--
            Prepares the property pointing to the JaCoCo runtime agent which
            is passed as VM argument when Maven the Surefire plugin is executed.
        -->
        <execution>
            <id>pre-unit-test</id>
            <goals>
                <goal>prepare-agent</goal>
            </goals>
            <configuration>
                <!-- Sets the path to the file which contains the execution data.-->
                
                <destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
                 
                 <!--<destFile>E:/workspace/jacoco/jacoco.exec</destFile>
                <destFile>${project.basedir}/jacoco-ut.exec</destFile>
				
                    Sets the name of the property containing the settings
                    for JaCoCo runtime agent.
                -->
                <propertyName>surefireArgLine</propertyName>
            </configuration>
        </execution>
       
       
        <!--
            Ensures that the code coverage report for unit tests is created after
            unit tests have been run.
        -->
        <execution>
            <id>post-unit-test</id>
            <phase>test</phase>
            <goals>
                <goal>report</goal>
            </goals>
            <configuration>
            
                <!-- Sets the path to the file which contains the execution data.-->
                <dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
                 
                 
                 <!-- <destFile>$E:/workspace/jacoco/jacoco.exec</destFile>
                <destFile>${project.basedir}/jacoco-ut.exec</destFile>
                Sets the output directory for the code coverage report. -->
                <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
            </configuration>
        </execution>
    </executions>
	</plugin>
  </plugins>
  </build>
  
</project>